let assert = chai.assert;
describe("TestoviParser", function () {
  describe("porediRezultate()", function () {
    it("Isti testovi", function () {
      var string1 =
        '{\n  "stats": {\n    "suites": 2,\n    "tests": 2,\n    "passes": 1,\n    "pending": 0,\n    "failures": 1,\n    "start": "2021-11-26T10:59:15.167Z",\n    "end": "2021-11-26T10:59:15.192Z",\n    "duration": 25\n  },\n  "tests": [\n    {\n      "title": "should draw 3 rows when parameter are 2,3",\n      "fullTitle": "Tabela crtaj() should draw 3 rows when parameter are 2,3",\n      "file": null,\n      "duration": 8,\n      "currentRetry": 0,\n      "err": {\n        "message": "Broj redova treba biti 3: expected 2 to equal 3",\n        "showDiff": true,\n        "actual": "2",\n        "expected": "3",\n        "operator": "strictEqual",\n        "stack": "AssertionError: Broj redova treba biti 3: expected 2 to equal 3\\n    at Context.<anonymous> (test.js:9:14)"\n      }\n    },\n    {\n      "title": "should draw 2 columns in row 2 when parameter are 2,3",\n      "fullTitle": "Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3",\n      "file": null,\n      "duration": 1,\n      "currentRetry": 0,\n      "speed": "fast",\n      "err": {}\n    }\n  ],\n  "pending": [],\n  "failures": [\n    {\n      "title": "should draw 3 rows when parameter are 2,3",\n      "fullTitle": "Tabela crtaj() should draw 3 rows when parameter are 2,3",\n      "file": null,\n      "duration": 8,\n      "currentRetry": 0,\n      "err": {\n        "message": "Broj redova treba biti 3: expected 2 to equal 3",\n        "showDiff": true,\n        "actual": "2",\n        "expected": "3",\n        "operator": "strictEqual",\n        "stack": "AssertionError: Broj redova treba biti 3: expected 2 to equal 3\\n    at Context.<anonymous> (test.js:9:14)"\n      }\n    }\n  ],\n  "passes": [\n    {\n      "title": "should draw 2 columns in row 2 when parameter are 2,3",\n      "fullTitle": "Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3",\n      "file": null,\n      "duration": 1,\n      "currentRetry": 0,\n      "speed": "fast",\n      "err": {}\n    },\n    {\n      "title": "should draw 2 columns in row 2 when parameter are 2,3",\n      "fullTitle": "Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3",\n      "file": null,\n      "duration": 1,\n      "currentRetry": 0,\n      "speed": "fast",\n      "err": {}\n    }\n  ]\n}';
      var string2 =
        '{\n  "stats": {\n    "suites": 2,\n    "tests": 2,\n    "passes": 1,\n    "pending": 0,\n    "failures": 1,\n    "start": "2021-11-26T10:59:15.167Z",\n    "end": "2021-11-26T10:59:15.192Z",\n    "duration": 25\n  },\n  "tests": [\n    {\n      "title": "should draw 3 rows when parameter are 2,3",\n      "fullTitle": "Tabela crtaj() should draw 3 rows when parameter are 2,3",\n      "file": null,\n      "duration": 8,\n      "currentRetry": 0,\n      "err": {\n        "message": "Broj redova treba biti 3: expected 2 to equal 3",\n        "showDiff": true,\n        "actual": "2",\n        "expected": "3",\n        "operator": "strictEqual",\n        "stack": "AssertionError: Broj redova treba biti 3: expected 2 to equal 3\\n    at Context.<anonymous> (test.js:9:14)"\n      }\n    },\n    {\n      "title": "should draw 2 columns in row 2 when parameter are 2,3",\n      "fullTitle": "Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3",\n      "file": null,\n      "duration": 1,\n      "currentRetry": 0,\n      "speed": "fast",\n      "err": {}\n    }\n  ],\n  "pending": [],\n  "failures": [\n    {\n      "title": "should draw 3 rows when parameter are 2,3",\n      "fullTitle": "Tabela crtaj() should draw 3 rows when parameter are 2,3",\n      "file": null,\n      "duration": 8,\n      "currentRetry": 0,\n      "err": {\n        "message": "Broj redova treba biti 3: expected 2 to equal 3",\n        "showDiff": true,\n        "actual": "2",\n        "expected": "3",\n        "operator": "strictEqual",\n        "stack": "AssertionError: Broj redova treba biti 3: expected 2 to equal 3\\n    at Context.<anonymous> (test.js:9:14)"\n      }\n    }\n  ],\n  "passes": [\n    {\n      "title": "should draw 2 columns in row 2 when parameter are 2,3",\n      "fullTitle": "Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3",\n      "file": null,\n      "duration": 1,\n      "currentRetry": 0,\n      "speed": "fast",\n      "err": {}\n    },\n    {\n      "title": "should draw 2 columns in row 2 when parameter are 2,3",\n      "fullTitle": "Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3",\n      "file": null,\n      "duration": 1,\n      "currentRetry": 0,\n      "speed": "fast",\n      "err": {}\n    }\n  ]\n}';
      var objekat = TestoviParser.porediRezultate(string1, string2);
      assert.equal(
        JSON.stringify(objekat),
        '{"promjena":"50%","greske":["Tabela crtaj() should draw 3 rows when parameter are 2,3"]}',
        "Svi isti i prolazi pola testova drugog testa"
      );
    });

    it("Različiti testovi (1 greška iz prvog i 1 iz drugog)", function () {
      var string1 =
        '{\n  "stats": {\n    "suites": 2,\n    "tests": 3,\n    "passes": 2,\n    "pending": 0,\n    "failures": 1,\n    "start": "2021-11-26T10:59:15.167Z",\n    "end": "2021-11-26T10:59:15.192Z",\n    "duration": 25\n  },\n  "tests": [\n    {\n      "title": "should draw 4 rows when parameter are 2,3",\n      "fullTitle": "Tabela crtaj() should draw 4 rows when parameter are 2,3",\n      "file": null,\n      "duration": 8,\n      "currentRetry": 0,\n      "err": {\n        "message": "Broj redova treba biti 3: expected 2 to equal 3",\n        "showDiff": true,\n        "actual": "2",\n        "expected": "3",\n        "operator": "strictEqual",\n        "stack": "AssertionError: Broj redova treba biti 3: expected 2 to equal 3\\n    at Context.<anonymous> (test.js:9:14)"\n      }\n    },\n    {\n      "title": "should draw 2 columns in row 2 when parameter are 2,3",\n      "fullTitle": "Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3",\n      "file": null,\n      "duration": 1,\n      "currentRetry": 0,\n      "speed": "fast",\n      "err": {}\n    },\n    {\n      "title": "should draw 2 columns in row 2 when parameter are 2,3",\n      "fullTitle": "Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3",\n      "file": null,\n      "duration": 1,\n      "currentRetry": 0,\n      "speed": "fast",\n      "err": {}\n    }\n  ],\n  "pending": [],\n  "failures": [\n    {\n      "title": "should draw 4 rows when parameter are 2,3",\n      "fullTitle": "Tabela crtaj() should draw 4 rows when parameter are 2,3",\n      "file": null,\n      "duration": 8,\n      "currentRetry": 0,\n      "err": {\n        "message": "Broj redova treba biti 3: expected 2 to equal 3",\n        "showDiff": true,\n        "actual": "2",\n        "expected": "3",\n        "operator": "strictEqual",\n        "stack": "AssertionError: Broj redova treba biti 3: expected 2 to equal 3\\n    at Context.<anonymous> (test.js:9:14)"\n      }\n    }\n  ],\n  "passes": [\n    {\n      "title": "should draw 2 columns in row 2 when parameter are 2,3",\n      "fullTitle": "Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3",\n      "file": null,\n      "duration": 1,\n      "currentRetry": 0,\n      "speed": "fast",\n      "err": {}\n    },\n    {\n      "title": "should draw 2 columns in row 2 when parameter are 2,3",\n      "fullTitle": "Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3",\n      "file": null,\n      "duration": 1,\n      "currentRetry": 0,\n      "speed": "fast",\n      "err": {}\n    }\n  ]\n}';

      var string2 =
        '{\n  "stats": {\n    "suites": 2,\n    "tests": 3,\n    "passes": 2,\n    "pending": 0,\n    "failures": 1,\n    "start": "2021-11-26T10:59:15.167Z",\n    "end": "2021-11-26T10:59:15.192Z",\n    "duration": 25\n  },\n  "tests": [\n    {\n      "title": "should draw 3 rows when parameter are 2,3",\n      "fullTitle": "Tabela crtaj() should draw 3 rows when parameter are 2,3",\n      "file": null,\n      "duration": 8,\n      "currentRetry": 0,\n      "err": {\n        "message": "Broj redova treba biti 3: expected 2 to equal 3",\n        "showDiff": true,\n        "actual": "2",\n        "expected": "3",\n        "operator": "strictEqual",\n        "stack": "AssertionError: Broj redova treba biti 3: expected 2 to equal 3\\n    at Context.<anonymous> (test.js:9:14)"\n      }\n    },\n    {\n      "title": "should draw 2 columns in row 2 when parameter are 2,3",\n      "fullTitle": "Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3",\n      "file": null,\n      "duration": 1,\n      "currentRetry": 0,\n      "speed": "fast",\n      "err": {}\n    },\n    {\n      "title": "should draw 2 columns in row 2 when parameter are 2,3",\n      "fullTitle": "Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3",\n      "file": null,\n      "duration": 1,\n      "currentRetry": 0,\n      "speed": "fast",\n      "err": {}\n    }\n  ],\n  "pending": [],\n  "failures": [\n    {\n      "title": "should draw 3 rows when parameter are 2,3",\n      "fullTitle": "Tabela crtaj() should draw 3 rows when parameter are 2,3",\n      "file": null,\n      "duration": 8,\n      "currentRetry": 0,\n      "err": {\n        "message": "Broj redova treba biti 3: expected 2 to equal 3",\n        "showDiff": true,\n        "actual": "2",\n        "expected": "3",\n        "operator": "strictEqual",\n        "stack": "AssertionError: Broj redova treba biti 3: expected 2 to equal 3\\n    at Context.<anonymous> (test.js:9:14)"\n      }\n    }\n  ],\n  "passes": [\n    {\n      "title": "should draw 2 columns in row 2 when parameter are 2,3",\n      "fullTitle": "Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3",\n      "file": null,\n      "duration": 1,\n      "currentRetry": 0,\n      "speed": "fast",\n      "err": {}\n    },\n    {\n      "title": "should draw 2 columns in row 2 when parameter are 2,3",\n      "fullTitle": "Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3",\n      "file": null,\n      "duration": 1,\n      "currentRetry": 0,\n      "speed": "fast",\n      "err": {}\n    }\n  ]\n}';
      var objekat = TestoviParser.porediRezultate(string1, string2);
      assert.equal(
        JSON.stringify(objekat),
        '{"promjena":"50%","greske":["Tabela crtaj() should draw 4 rows when parameter are 2,3","Tabela crtaj() should draw 3 rows when parameter are 2,3"]}',
        "Drugi slučaj"
      );
    });

    it("Različiti testovi (2 greška iz prvog leksikografski)", function () {
      var string2 =
        '{\n  "stats": {\n\t"suites": 2,\n\t"tests": 2,\n\t"passes": 2,\n\t"pending": 0,\n\t"failures": 0,\n\t"start": "2021-11-05T15:00:26.343Z",\n\t"end": "2021-11-05T15:00:26.352Z",\n\t"duration": 9\n  },\n  "tests": [\n\t{\n  \t"title": "should draw 3 rows when parameter are 2,3",\n  \t"fullTitle": "Tabela crtaj() should draw 3 rows when parameter are 2,3",\n  \t"file": null,\n  \t"duration": 1,\n  \t"currentRetry": 0,\n  \t"speed": "fast",\n  \t"err": {}\n\t},\n\t{\n  \t"title": "should draw 2 columns in row 2 when parameter are 2,3",\n  \t"fullTitle": "Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3",\n  \t"file": null,\n  \t"duration": 0,\n  \t"currentRetry": 0,\n  \t"speed": "fast",\n  \t"err": {}\n\t}\n  ],\n  "pending": [],\n  "failures": [],\n  "passes": [\n\t{\n  \t"title": "should draw 3 rows when parameter are 2,3",\n  \t"fullTitle": "Tabela crtaj() should draw 3 rows when parameter are 2,3",\n  \t"file": null,\n  \t"duration": 1,\n  \t"currentRetry": 0,\n  \t"speed": "fast",\n  \t"err": {}\n\t},\n\t{\n  \t"title": "should draw 2 columns in row 2 when parameter are 2,3",\n  \t"fullTitle": "Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3",\n  \t"file": null,\n  \t"duration": 0,\n  \t"currentRetry": 0,\n  \t"speed": "fast",\n  \t"err": {}\n\t}\n  ]\n}\n';
      var string1 =
        '{\n  "stats": {\n    "suites": 2,\n    "tests": 2,\n    "passes": 0,\n    "pending": 0,\n    "failures": 2,\n    "start": "2021-11-29T12:26:53.155Z",\n    "end": "2021-11-29T12:26:53.198Z",\n    "duration": 43\n  },\n  "tests": [\n    {\n      "title": "beceda",\n      "fullTitle": "Tabela crtaj() beceda",\n      "file": null,\n      "duration": 6,\n      "currentRetry": 0,\n      "err": {\n        "message": "Broj redova treba biti 3: expected 2 to equal 3",\n        "showDiff": true,\n        "actual": "2",\n        "expected": "3",\n        "operator": "strictEqual",\n        "stack": "AssertionError: Broj redova treba biti 3: expected 2 to equal 3\\n    at Context.<anonymous> (test.js:9:14)"\n      }\n    },\n    {\n      "title": "abeceda",\n      "fullTitle": "Tabela crtaj() abeceda",\n      "file": null,\n      "duration": 1,\n      "currentRetry": 0,\n      "err": {\n        "message": "Broj redova treba biti 3: expected 2 to equal 3",\n        "showDiff": true,\n        "actual": "2",\n        "expected": "3",\n        "operator": "strictEqual",\n        "stack": "AssertionError: Broj redova treba biti 3: expected 2 to equal 3\\n    at Context.<anonymous> (test.js:16:14)"\n      }\n    }\n  ],\n  "pending": [],\n  "failures": [\n    {\n      "title": "beceda",\n      "fullTitle": "Tabela crtaj() beceda",\n      "file": null,\n      "duration": 6,\n      "currentRetry": 0,\n      "err": {\n        "message": "Broj redova treba biti 3: expected 2 to equal 3",\n        "showDiff": true,\n        "actual": "2",\n        "expected": "3",\n        "operator": "strictEqual",\n        "stack": "AssertionError: Broj redova treba biti 3: expected 2 to equal 3\\n    at Context.<anonymous> (test.js:9:14)"\n      }\n    },\n    {\n      "title": "abeceda",\n      "fullTitle": "Tabela crtaj() abeceda",\n      "file": null,\n      "duration": 1,\n      "currentRetry": 0,\n      "err": {\n        "message": "Broj redova treba biti 3: expected 2 to equal 3",\n        "showDiff": true,\n        "actual": "2",\n        "expected": "3",\n        "operator": "strictEqual",\n        "stack": "AssertionError: Broj redova treba biti 3: expected 2 to equal 3\\n    at Context.<anonymous> (test.js:16:14)"\n      }\n    }\n  ],\n  "passes": []\n}';
      var objekat = TestoviParser.porediRezultate(string1, string2);

      assert.equal(
        JSON.stringify(objekat),
        '{"promjena":"50%","greske":["Tabela crtaj() abeceda","Tabela crtaj() beceda"]}',
        "Treći slučaj"
      );
    });

    it("Različiti testovi (2 greška iz prvog leksikografski)", function () {
      var string1 =
        '{\n  "stats": {\n\t"suites": 2,\n\t"tests": 2,\n\t"passes": 2,\n\t"pending": 0,\n\t"failures": 0,\n\t"start": "2021-11-05T15:00:26.343Z",\n\t"end": "2021-11-05T15:00:26.352Z",\n\t"duration": 9\n  },\n  "tests": [\n\t{\n  \t"title": "should draw 3 rows when parameter are 2,3",\n  \t"fullTitle": "Tabela crtaj() should draw 3 rows when parameter are 2,3",\n  \t"file": null,\n  \t"duration": 1,\n  \t"currentRetry": 0,\n  \t"speed": "fast",\n  \t"err": {}\n\t},\n\t{\n  \t"title": "should draw 2 columns in row 2 when parameter are 2,3",\n  \t"fullTitle": "Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3",\n  \t"file": null,\n  \t"duration": 0,\n  \t"currentRetry": 0,\n  \t"speed": "fast",\n  \t"err": {}\n\t}\n  ],\n  "pending": [],\n  "failures": [],\n  "passes": [\n\t{\n  \t"title": "should draw 3 rows when parameter are 2,3",\n  \t"fullTitle": "Tabela crtaj() should draw 3 rows when parameter are 2,3",\n  \t"file": null,\n  \t"duration": 1,\n  \t"currentRetry": 0,\n  \t"speed": "fast",\n  \t"err": {}\n\t},\n\t{\n  \t"title": "should draw 2 columns in row 2 when parameter are 2,3",\n  \t"fullTitle": "Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3",\n  \t"file": null,\n  \t"duration": 0,\n  \t"currentRetry": 0,\n  \t"speed": "fast",\n  \t"err": {}\n\t}\n  ]\n}\n';
      var string2 =
        '{\n  "stats": {\n    "suites": 2,\n    "tests": 2,\n    "passes": 0,\n    "pending": 0,\n    "failures": 2,\n    "start": "2021-11-29T12:26:53.155Z",\n    "end": "2021-11-29T12:26:53.198Z",\n    "duration": 43\n  },\n  "tests": [\n    {\n      "title": "beceda",\n      "fullTitle": "Tabela crtaj() beceda",\n      "file": null,\n      "duration": 6,\n      "currentRetry": 0,\n      "err": {\n        "message": "Broj redova treba biti 3: expected 2 to equal 3",\n        "showDiff": true,\n        "actual": "2",\n        "expected": "3",\n        "operator": "strictEqual",\n        "stack": "AssertionError: Broj redova treba biti 3: expected 2 to equal 3\\n    at Context.<anonymous> (test.js:9:14)"\n      }\n    },\n    {\n      "title": "abeceda",\n      "fullTitle": "Tabela crtaj() abeceda",\n      "file": null,\n      "duration": 1,\n      "currentRetry": 0,\n      "err": {\n        "message": "Broj redova treba biti 3: expected 2 to equal 3",\n        "showDiff": true,\n        "actual": "2",\n        "expected": "3",\n        "operator": "strictEqual",\n        "stack": "AssertionError: Broj redova treba biti 3: expected 2 to equal 3\\n    at Context.<anonymous> (test.js:16:14)"\n      }\n    }\n  ],\n  "pending": [],\n  "failures": [\n    {\n      "title": "beceda",\n      "fullTitle": "Tabela crtaj() beceda",\n      "file": null,\n      "duration": 6,\n      "currentRetry": 0,\n      "err": {\n        "message": "Broj redova treba biti 3: expected 2 to equal 3",\n        "showDiff": true,\n        "actual": "2",\n        "expected": "3",\n        "operator": "strictEqual",\n        "stack": "AssertionError: Broj redova treba biti 3: expected 2 to equal 3\\n    at Context.<anonymous> (test.js:9:14)"\n      }\n    },\n    {\n      "title": "abeceda",\n      "fullTitle": "Tabela crtaj() abeceda",\n      "file": null,\n      "duration": 1,\n      "currentRetry": 0,\n      "err": {\n        "message": "Broj redova treba biti 3: expected 2 to equal 3",\n        "showDiff": true,\n        "actual": "2",\n        "expected": "3",\n        "operator": "strictEqual",\n        "stack": "AssertionError: Broj redova treba biti 3: expected 2 to equal 3\\n    at Context.<anonymous> (test.js:16:14)"\n      }\n    }\n  ],\n  "passes": []\n}';
      var objekat = TestoviParser.porediRezultate(string1, string2);

      assert.equal(
        JSON.stringify(objekat),
        '{"promjena":"100%","greske":["Tabela crtaj() abeceda","Tabela crtaj() beceda"]}',
        "Cetvrti slučaj"
      );
    });

    it("Različiti testovi (2 greška iz drugog  1 iz prvog, ali se ponavlja u drugom)", function () {
      var string1 =
        '{\n  "stats": {\n    "suites": 2,\n    "tests": 1,\n    "passes": 0,\n    "pending": 0,\n    "failures": 1,\n    "start": "2021-11-29T12:39:49.854Z",\n    "end": "2021-11-29T12:39:49.879Z",\n    "duration": 25\n  },\n  "tests": [\n    {\n      "title": "beceda",\n      "fullTitle": "Tabela crtaj() beceda",\n      "file": null,\n      "duration": 6,\n      "currentRetry": 0,\n      "err": {\n        "message": "Broj redova treba biti 3: expected 2 to equal 3",\n        "showDiff": true,\n        "actual": "2",\n        "expected": "3",\n        "operator": "strictEqual",\n        "stack": "AssertionError: Broj redova treba biti 3: expected 2 to equal 3\\n    at Context.<anonymous> (test.js:9:14)"\n      }\n    }\n  ],\n  "pending": [],\n  "failures": [\n    {\n      "title": "beceda",\n      "fullTitle": "Tabela crtaj() beceda",\n      "file": null,\n      "duration": 6,\n      "currentRetry": 0,\n      "err": {\n        "message": "Broj redova treba biti 3: expected 2 to equal 3",\n        "showDiff": true,\n        "actual": "2",\n        "expected": "3",\n        "operator": "strictEqual",\n        "stack": "AssertionError: Broj redova treba biti 3: expected 2 to equal 3\\n    at Context.<anonymous> (test.js:9:14)"\n      }\n    }\n  ],\n  "passes": []\n}';
      var string2 =
        '{\n  "stats": {\n    "suites": 2,\n    "tests": 2,\n    "passes": 0,\n    "pending": 0,\n    "failures": 2,\n    "start": "2021-11-29T12:26:53.155Z",\n    "end": "2021-11-29T12:26:53.198Z",\n    "duration": 43\n  },\n  "tests": [\n    {\n      "title": "beceda",\n      "fullTitle": "Tabela crtaj() beceda",\n      "file": null,\n      "duration": 6,\n      "currentRetry": 0,\n      "err": {\n        "message": "Broj redova treba biti 3: expected 2 to equal 3",\n        "showDiff": true,\n        "actual": "2",\n        "expected": "3",\n        "operator": "strictEqual",\n        "stack": "AssertionError: Broj redova treba biti 3: expected 2 to equal 3\\n    at Context.<anonymous> (test.js:9:14)"\n      }\n    },\n    {\n      "title": "abeceda",\n      "fullTitle": "Tabela crtaj() abeceda",\n      "file": null,\n      "duration": 1,\n      "currentRetry": 0,\n      "err": {\n        "message": "Broj redova treba biti 3: expected 2 to equal 3",\n        "showDiff": true,\n        "actual": "2",\n        "expected": "3",\n        "operator": "strictEqual",\n        "stack": "AssertionError: Broj redova treba biti 3: expected 2 to equal 3\\n    at Context.<anonymous> (test.js:16:14)"\n      }\n    }\n  ],\n  "pending": [],\n  "failures": [\n    {\n      "title": "beceda",\n      "fullTitle": "Tabela crtaj() beceda",\n      "file": null,\n      "duration": 6,\n      "currentRetry": 0,\n      "err": {\n        "message": "Broj redova treba biti 3: expected 2 to equal 3",\n        "showDiff": true,\n        "actual": "2",\n        "expected": "3",\n        "operator": "strictEqual",\n        "stack": "AssertionError: Broj redova treba biti 3: expected 2 to equal 3\\n    at Context.<anonymous> (test.js:9:14)"\n      }\n    },\n    {\n      "title": "abeceda",\n      "fullTitle": "Tabela crtaj() abeceda",\n      "file": null,\n      "duration": 1,\n      "currentRetry": 0,\n      "err": {\n        "message": "Broj redova treba biti 3: expected 2 to equal 3",\n        "showDiff": true,\n        "actual": "2",\n        "expected": "3",\n        "operator": "strictEqual",\n        "stack": "AssertionError: Broj redova treba biti 3: expected 2 to equal 3\\n    at Context.<anonymous> (test.js:16:14)"\n      }\n    }\n  ],\n  "passes": []\n}';
      var objekat = TestoviParser.porediRezultate(string1, string2);
      assert.equal(
        JSON.stringify(objekat),
        '{"promjena":"100%","greske":["Tabela crtaj() abeceda","Tabela crtaj() beceda"]}',
        "Peti slučaj"
      );
    });
  });
});
